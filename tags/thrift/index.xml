<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thrift on gruchalski.com</title>
    <link>https://gruchalski.com/tags/thrift/</link>
    <description>Recent content in thrift on gruchalski.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gruchalski.com/tags/thrift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>State of gossiperl and some JavaScript Thrift goodies</title>
      <link>https://gruchalski.com/posts/2015-01-05-state-of-gossiperl-and-some-javascript-thrift-goodies/</link>
      <pubDate>Mon, 05 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2015-01-05-state-of-gossiperl-and-some-javascript-thrift-goodies/</guid>
      <description>The gossiperl project is growing. I had a great, productive, working Christmas break, implementing a number of client libraries for the message bus. In the last couple of weeks a number of client libraries for gossiperl have been released. The full list now includes:
 Ruby JVM with examples in Clojure and Scala .NET as a mono project Erlang  And the most exciting so far â€” gossiperl client Chrome extension.</description>
    </item>
    
    <item>
      <title>Gossiperl   gossip middleware in Erlang</title>
      <link>https://gruchalski.com/posts/2014-12-09-gossiperl-gossip-middleware-in-erlang/</link>
      <pubDate>Tue, 09 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2014-12-09-gossiperl-gossip-middleware-in-erlang/</guid>
      <description>Today I&amp;rsquo;ve released a project called gossiperl. Gossiperl is a language agnostic gossip middleware written in Erlang. The purpose of the project was purely research on gossip based systems, as well as, learning Erlang.
Main intent was to create a common communication middleware enabled over gossip using a standard binary transport mechanism. Gossiperl is a result of over 6 months of research, reading, learning, planning and implementation. Gossiperl uses Apache Thrift binary serialisation over UDP.</description>
    </item>
    
    <item>
      <title>Apache Thrift via UDP in Erlang</title>
      <link>https://gruchalski.com/posts/2014-10-12-apache-thrift-via-udp-in-erlang/</link>
      <pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2014-10-12-apache-thrift-via-udp-in-erlang/</guid>
      <description>A few months ago I have started learning Erlang, mostly for fun but it was right about time to jump on the functional bandwagon. The best way to learn a new language is to find an engaging project, in my case its been something what has been on my mind for quite a while: a cloud communication protocol / framework for distributed computing. Some basic principles of what it is about can be found here: CloudDDS.</description>
    </item>
    
  </channel>
</rss>