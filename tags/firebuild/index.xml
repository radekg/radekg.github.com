<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firebuild on gruchalski.com</title>
    <link>https://gruchalski.com/tags/firebuild/</link>
    <description>Recent content in firebuild on gruchalski.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gruchalski.com/tags/firebuild/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Launching Consul cluster with firebuild and other news</title>
      <link>https://gruchalski.com/posts/2021-04-14-launching-consul-cluster-with-firebuild/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-04-14-launching-consul-cluster-with-firebuild/</guid>
      <description>Some two month ago, when I started the Firecracker journey, I set myself a goal to run en etcd cluster in Firecracker microVMs. Many lines of code later, after tacking the problem the difficult way, I have arrived at the destination.
Okay, it&amp;rsquo;s not etcd but rather HashiCorp Consul.
Here&amp;rsquo;s how a 3 node Consul cluster is launched with firebuild:
# Start Consul 1 with IP 192.168.127.10: sudo firebuild run \  --profile=standard \  --from=combust-labs/consul:1.</description>
    </item>
    
    <item>
      <title>firebuild rootfs - gRPC with mTLS</title>
      <link>https://gruchalski.com/posts/2021-03-28-firebuild-rootfs-grpc-with-mtls/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-03-28-firebuild-rootfs-grpc-with-mtls/</guid>
      <description>the problem Currently, when a rootfs is built, the guest is started with an SSH server and the bootstrap process executes via an SSH connection. I don&amp;rsquo;t like this and want to replace the SSH method with an MMDS based solution. MMDS is already present in the firebuild run command.
run uses the vminit component from firebuild-mmds. When the guest starts, the vminit guest service connects to the MMDS endpoint, downloads the metadata and configures the VM.</description>
    </item>
    
    <item>
      <title>Introducing firebuild</title>
      <link>https://gruchalski.com/posts/2021-03-23-introducing-firebuild/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-03-23-introducing-firebuild/</guid>
      <description>what is Firecracker Firecracker is a virtualization technology for creating and managing secure, multi-tenant services suited for container-like and serverless scenarios. Firecracker workloads run in virtual machines, not containers. Unlike containers, they benefit from extra isolation properties provided by the hardware virtualization. Similar to containers, Firecracker VMs—microVMs—are lightweight and fast to boot. Like containers, they can be treated like cattle. They combine the flexibility of containers and security of virtual machines.</description>
    </item>
    
    <item>
      <title>firebuild prerequisites</title>
      <link>https://gruchalski.com/posts/2021-03-22-firebuild-prerequisites/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-03-22-firebuild-prerequisites/</guid>
      <description>This article describes the prerequisites to the Introducing firebuild.
install Firecracker and Jailer on the host Firecracker works only on Linux. You can use this program to install and link the binaries on your system.
install and configure golang 1.16+ The tc-redirect-tap CNI plugin (mentioned below) requires golang to build, as does firebuild. firebuild requires golang 1.16+ so install it:
rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz mkdir -p $HOME/dev/golang/{bin,src} export PATH=$PATH:/usr/local/go/bin:$HOME/dev/golang/bin export GOPATH=$HOME/dev/golang The most recent version can be downloaded from golang website.</description>
    </item>
    
  </channel>
</rss>
