<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>uma on gruchalski.com</title>
    <link>https://gruchalski.com/tags/uma/</link>
    <description>Recent content in uma on gruchalski.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gruchalski.com/tags/uma/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Keycloak Authorization Services - retrieving the decision only</title>
      <link>https://gruchalski.com/posts/2020-09-06-keycloak-authorization-services-decision-only/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2020-09-06-keycloak-authorization-services-decision-only/</guid>
      <description>In Introduction to Keycloak Authorization Services 1, I have described how to use the Authorization Services to find out if the user has access to certain resources.
I have done so by asking Keycloak to issue an access token with a special grant_type with the value of urn:ietf:params:oauth:grant-type:uma-ticket which returned a list of permissions the has access to.
The request looked like this:
curl --silent -X POST \  ${KEYCLOAK_TOKEN_URL} \  -H &amp;#34;Authorization: Bearer ${access_token}&amp;#34; \  --data &amp;#34;grant_type=urn:ietf:params:oauth:grant-type:uma-ticket&amp;#34; \  --data &amp;#34;audience=customers&amp;#34; \  --data &amp;#34;permission=CustomerB#customer-b&amp;#34; | jq &amp;#39;.</description>
    </item>
    
    <item>
      <title>Introduction to Keycloak Authorization Services</title>
      <link>https://gruchalski.com/posts/2020-09-05-introduction-to-keycloak-authorization-services/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2020-09-05-introduction-to-keycloak-authorization-services/</guid>
      <description>As the number of applications and websites in the organization grows, the developer will inevitably receive a request to implement Single Sign-On. Single Sign-On (SSO for short) is an authentication scheme allowing the user to log in with a single set of credentials and share the session across multiple, independent, potentially unrelated systems.
The savvy developer will roll out Keycloak, enable Standard Flow client, maybe enable some of the social login options, like GitHub, Google or Facebook and call it a day.</description>
    </item>
    
  </channel>
</rss>