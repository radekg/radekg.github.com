<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ory on gruchalski.com</title>
    <link>https://gruchalski.com/tags/ory/</link>
    <description>Recent content in ory on gruchalski.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gruchalski.com/tags/ory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>On software testing with dockertest</title>
      <link>https://gruchalski.com/posts/2021-04-24-on-software-testing-with-dockertest/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-04-24-on-software-testing-with-dockertest/</guid>
      <description>Software almost never runs in isolation. Today&amp;rsquo;s systems integrate with a vast number of external services. Ensuring reliability is difficult because the external dependencies, be it a database or an authentication system, adds an element of unpredictability which is difficult to emulate in isolation. A reliable system should account for the behavior of its dependencies. What does it help that an API is up and running when the underlying service it talks to hasn&amp;rsquo;t been accounted for a specific edge case and is causing an unexpected latency to my clients under certain conditions?</description>
    </item>
    
    <item>
      <title>Looking at Zanzibar through ORY Keto</title>
      <link>https://gruchalski.com/posts/2021-04-11-looking-at-zanzibar-through-ory-keto/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-04-11-looking-at-zanzibar-through-ory-keto/</guid>
      <description>Permissions management is an interesting topic. Modern applications are often complex beasts. It doesn&amp;rsquo;t take much time to hit the point where certain functionality must be allowed only to the selected users or access to a resource should be granted only under certain conditions.
Building a flexible permissions management system is not easy. They tend to be tightly coupled with the business logic and executed every time a decision whether to grant or deny access is required.</description>
    </item>
    
    <item>
      <title>ORY reference Docker Compose and thoughts on the platform</title>
      <link>https://gruchalski.com/posts/2021-04-10-ory-reference-docker-compose-and-thoughts-on-the-platform/</link>
      <pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gruchalski.com/posts/2021-04-10-ory-reference-docker-compose-and-thoughts-on-the-platform/</guid>
      <description>obligatory Keycloak mention Keycloak is awesome because it provides almost everything an organization of almost any size might ever need when it comes to topics like OpenID, SSO, federation or authorization services.
But Keycloak is a monolith, it doesn&amp;rsquo;t do things the cloud native way1. There&amp;rsquo;s quite a few running modes one needs to fully understand how to operate: standalone, standalone clustered, domain clustered mode, cross data center replication. All very powerful but to many, pretty unapproachable.</description>
    </item>
    
  </channel>
</rss>
